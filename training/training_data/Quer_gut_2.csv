Page;Content;Importance
1;- Machine Learning Pipelines bestehen typischerweise aus Preprocessing, Feature Engineering, Model Training und Evaluation. Tools wie Scikit-Learn Pipelines, MLflow und Kubeflow ermöglichen reproduzierbare Workflows. - Feature Importance kann mit Permutation Importance oder SHAP-Werten bewertet werden. Random Forests bieten eingebauten Feature-Score. - Data Leakage vermeiden: keine Information aus Zielvariablen darf in Trainingsdaten vorzeitig einfließen. Wichtig beim Split von Train/Test. - Cross-Validation (z.B. Stratified K-Fold) reduziert Varianz in Modellbewertung. Nested CV wird bei Hyperparameteroptimierung empfohlen. - Modellvergleich erfordert konsistente Metriken: F1-Score bei Klassifikation, RMSE bei Regression.;3
2;- DevOps kombiniert Entwicklung (Dev) und IT-Betrieb (Ops), um Software schneller, zuverlässiger und kontinuierlich auszuliefern. - CI/CD-Pipelines: automatisierte Tests, Builds, Deployments (Tools: Jenkins, GitHub Actions, GitLab CI). - Infrastructure as Code (IaC): Automatisierung von Infrastruktur mit Terraform, Ansible, Pulumi. - Monitoring mit Prometheus + Grafana, Tracing mit OpenTelemetry, Log-Analyse via ELK-Stack. - Security integriert in DevOps = DevSecOps: Shift Left Testing, Secrets Management, SAST, DAST.;3
3;- Netzwerkschichtenmodell: OSI vs. TCP/IP, inklusive Layer (z.B. Transport, Anwendung, Sicherung). - Routingprotokolle: statisch vs. dynamisch (z.B. OSPF, BGP), Metriken, Konvergenzzeit. - NAT vs. PAT: Adressübersetzung bei privatem Netzwerkzugang zum Internet. - VLANs und Subnetting: logische Netztrennung, IP-Adressräume, CIDR, VLSM. - Netzwerküberwachung: SNMP, NetFlow, ICMP, Portscanner, IDS/IPS-Systeme.;3
4;- Datenbank-Tuning: Query-Optimierung durch Indexierung, Analyse von EXPLAIN-Plänen, Vermeidung von Full Table Scans. - Caching-Strategien: Write-Through, Write-Back, Redis, Memcached. - Datenbank-Replikation: Master-Slave, Multi-Master, Eventual Consistency. - Partitionierung (Sharding): horizontale Skalierung großer Datenmengen. - Sicherheitskonzepte: Verschlüsselung, rollenbasierte Zugriffskontrolle (RBAC), Audit Logs.;3
5;- Agile Methoden: Scrum, Kanban, Extreme Programming - Iterationen, Standups, Burndown Charts. - Product Owner vs. Scrum Master: Rollenverständnis und Verantwortlichkeiten. - User Stories und Akzeptanzkriterien als zentrale Arbeitseinheit. - Agile Metriken: Velocity, Lead Time, Cumulative Flow Diagram. - SAFe: Scaled Agile Framework für große Organisationen mit mehreren Teams und Koordinationsebenen.;3
